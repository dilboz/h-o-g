<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="formAssistant1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 9</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="editorButtonImageOptions1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAADdAAAA3QFwU6IHAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABDtJREFUWEfF1m9MG3UcBvCLZoEXJkYTlSWLW9QZTSQmQ6OLzQZEpp04
        YImJE8JwbGS4NkX2B2SIDNptMCoBLC1zAUbH1g3abTjYOlrLETarbhOZGa5IYC3xxfwzbVOJ0+Xx9722
        2D8HEVvCi4eUX5r73F3vft+HA/Cf0jjWF3dw0ipVTVzU7Rs385VjfY7ym+c8H4x+5tl946yj+LqJV4wY
        dbKRLqmcfVfsGGIRXQxO/eTg0jonr62ZtLpVE/2oGjfjo7HzKL/ZC4aD4Sj+7jQUI92QDZ9C4TUDtl09
        7t7y9TFtzhX9UrFjBkd0kdI2YYuvn+KVaueAl+GYBw6GY/OXHcj5ot276VKrMs/WFi9mUEQXNbdtCfVT
        g/Y65wCiwMFwvDX0KTYOttjX2zQJYlbEQpOLT2S4K4Y4Mga0SP9c41rf35QY7oX847/ymOByyyeo6KlF
        pg/H65YmpF1scCX31obciZkPvt88+ttebGnGt0dK8Xf1ZvxVkoXJPRtQoi9DWn8DUs31WHPhY3uyrXLm
        mZg5AXrgosatzfi1sQj3/Pif76ViOvcFfLNdIuBrz6sh6T2El88dUIacAL1qUT7tUF4+jru3RnFPLQvB
        vVkr4Ul7FNn6Uj9+EC/27PcmGVXCKyqcgP89/994tqUbnZbbmJ7+A3dGRzC9KyMEn0p9CKlnDwRwrDqj
        xPOmKq1wArTDMXw+m0wEnt/4C96p/A3Nhik4nS6MD1rhzk4S8N9Xx6NdviYcx3Pdle6n+uRxnG97jR7P
        3PkT1hX8iKqGG7h2dRhXjAb8/OpjuJy5AikMDMPxTFcFnjaUSTna22OFSzbdQlL6OIr22mG+YIFFXYEU
        4z5RfOXJcjxhKNNxNFhiiT+79nssX3Ud+QojpEbl7PiJMjzeWcJzvqkWW/zJN3m8ZDo0J768swTL9Lsd
        nH+kLgaOhI6dHo7hNM8XA8cj7e97OIY7FgnHw60KB+drMrPjW6xdC4XjwSMynhNq1Cw4TbUz5t4FwuV4
        4PAOHUcdbjZ8j53tlsN70dOuXwgccYcLpRwVSIZThwvBqUyc/qoGGNoBmHNwskYdUzy+pdDNNbKtmAYC
        w7Xh+Ea+BT+Y5QIOUzrQIcHRotJY4VjSvM03jOgPtVeGU4GcqVHbj32I3Kx1uNP5hoBDm4i7dSugKi7C
        amNtdLi2wMu1FPw7jikMVwZ3OMWutyF5JQXvZiRjqFWK/Se24rUeldhUmy+O+zRbQwsJhaoztVd/gYSs
        MBPy6lxsMFUHNZno8fs1+XauLS+yklGoOlN7FQqkv8PFEmdX7uI0eeKlNBCqztReFwRvypu7lgdC1Zna
        a0xve9iVBxKxEAhVZ2qvDPdGgXvpgQv+zcMjuhgcaq8M1zLcPQ/cTe954FWbK6KLYqECSR2OahQ1GYY7
        GO5huIfhDhosDNcJ2yvb4cSOERlw/wDGRmg//St0lwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>